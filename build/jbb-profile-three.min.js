/* THREE.js profile for JBB - https://github.com/wavesoft/jbb-profile-three */
var JBBProfileThree=function(e){function t(r){if(a[r])return a[r].exports;var i=a[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var a={};return t.m=e,t.c=a,t.p="",t(0)}([function(e,t,a){"use strict";var r=a(1),i=(a(2),1),n=0,o={Default:function(e){return new e},Unconstructed:function(e){return Object.create(e.prototype)}},s={Default:function(e,t,a){for(var r=0;r<t.length;r++)e[t[r]]=a[r]},Object3D:function(e,t,a){for(var r=0;r<t.length;r++){var i=t[r];switch(i){case"position":case"rotation":case"quaternion":case"scale":e[i].copy(a[r]);break;default:e[i]=a[r]}}for(var r=0;r<e.children.length;r++)e.children[r].parent=e},Mesh:function(e,t,a){s.Object3D(e,t,a),e.updateMorphTargets()},Texture:function(e,t,a){s.Default(e,t,a),e.image&&(e.image.onload=function(){e.needsUpdate=!0})},AnimationClip:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.name,e.duration,e.tracks)},KeyframeTrack:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.name,e.keys)},WidthHeightDepth:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.width,e.parameters.height,e.parameters.depth,e.parameters.widthSegments,e.parameters.heightSegments,e.parameters.depthSegments)},WidthHeight:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.width,e.parameters.height,e.parameters.widthSegments,e.parameters.heightSegments)},RadiusSegmentsTheta:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.radius,e.parameters.segments,e.parameters.thetaStart,e.parameters.thetaLength)},CylinderGeometry:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.radiusTop,e.parameters.radiusBottom,e.parameters.height,e.parameters.radialSegments,e.parameters.heightSegments,e.parameters.openEnded,e.parameters.thetaStart,e.parameters.thetaLength)},RadiusDetail:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.radius,e.parameters.detail)},LatheGeometry:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.points,e.parameters.segments,e.parameters.phiStart,e.parameters.phiLength)},SphereGeometry:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.radius,e.parameters.widthSegments,e.parameters.heightSegments,e.parameters.phiStart,e.parameters.phiLength,e.parameters.thetaStart,e.parameters.thetaLength)},PolyhedronGeometry:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.vertices,e.parameters.indices,e.parameters.radius,e.parameters.detail)},RingGeometry:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.innerRadius,e.parameters.outerRadius,e.parameters.thetaSegments,e.parameters.phiSegments,e.parameters.thetaStart,e.parameters.thetaLength)},TorusGeometry:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.radius,e.parameters.tube,e.parameters.radialSegments,e.parameters.tubularSegments,e.parameters.arc)},TorusKnot:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.radius,e.parameters.tube,e.parameters.radialSegments,e.parameters.tubularSegments,e.parameters.p,e.parameters.q,e.parameters.heightScale)},TubeGeometry:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.parameters.path,e.parameters.segments,e.parameters.radius,e.parameters.radialSegments,e.parameters.closed,e.parameters.taper)},Camera:function(e,t,a){s.Default(e,t,a),e.updateProjectionMatrix()},CubeCamera:function(e,t,a){s.Default(e,t,a),e.constructor.call(e,e.near,e.far,e.cubeResolution)},MD2Character:function(e,t,a){s.Default(e,t,a),e.mixer=new r.AnimationMixer(e.mesh)}},m=[[r.Vector2,o.Default,s.Default],[r.Vector3,o.Default,s.Default],[r.Vector4,o.Default,s.Default],[r.Face3,o.Default,s.Default],[r.Color,o.Default,s.Default],[r.Quaternion,o.Default,s.Default],[r.Euler,o.Default,s.Default],[r.Box2,o.Default,s.Default],[r.Box3,o.Default,s.Default],[r.Sphere,o.Default,s.Default],[r.Matrix3,o.Default,s.Default],[r.Matrix4,o.Default,s.Default],[r.BufferAttribute,o.Default,s.Default],[],[],[],[r.AnimationClip,o.Unconstructed,s.AnimationClip],[r.VectorKeyframeTrack,o.Unconstructed,s.KeyframeTrack],[r.QuaternionKeyframeTrack,o.Unconstructed,s.KeyframeTrack],[r.NumberKeyframeTrack,o.Unconstructed,s.KeyframeTrack],[r.BooleanKeyframeTrack,o.Unconstructed,s.KeyframeTrack],[r.StringKeyframeTrack,o.Unconstructed,s.KeyframeTrack],[r.BoxGeometry,o.Unconstructed,s.WidthHeightDepth],[r.CircleBufferGeometry,o.Unconstructed,s.RadiusSegmentsTheta],[r.CircleGeometry,o.Unconstructed,s.RadiusSegmentsTheta],[r.CylinderGeometry,o.Unconstructed,s.CylinderGeometry],[r.DodecahedronGeometry,o.Unconstructed,s.RadiusDetail],[r.IcosahedronGeometry,o.Unconstructed,s.RadiusDetail],[r.LatheGeometry,o.Unconstructed,s.LatheGeometry],[r.OctahedronGeometry,o.Unconstructed,s.RadiusDetail],[r.ParametricGeometry,o.Unconstructed,s.WidthHeight],[r.PlaneBufferGeometry,o.Unconstructed,s.WidthHeightDepth],[r.PlaneGeometry,o.Unconstructed,s.WidthHeightDepth],[r.PolyhedronGeometry,o.Unconstructed,s.PolyhedronGeometry],[r.RingGeometry,o.Unconstructed,s.RingGeometry],[r.SphereBufferGeometry,o.Unconstructed,s.SphereGeometry],[r.SphereGeometry,o.Unconstructed,s.SphereGeometry],[r.TetrahedronGeometry,o.Unconstructed,s.RadiusDetail],[r.TorusGeometry,o.Unconstructed,s.TorusGeometry],[r.TorusKnotGeometry,o.Unconstructed,s.TorusKnot],[r.TubeGeometry,o.Unconstructed,s.TubeGeometry],[r.BufferGeometry,o.Default,s.Default],[r.Geometry,o.Default,s.Default],[r.Mesh,o.Default,s.Mesh],[r.AmbientLight,o.Default,s.Default],[r.DirectionalLight,o.Default,s.Default],[r.HemisphereLight,o.Default,s.Default],[r.PointLight,o.Default,s.Default],[r.SpotLight,o.Default,s.Default],[r.Scene,o.Default,s.Object3D],[r.Object3D,o.Default,s.Object3D],[r.Fog,o.Default,s.Object3D],[r.FogExp2,o.Default,s.Object3D],[r.MeshBasicMaterial,o.Default,s.Default],[r.MeshPhongMaterial,o.Default,s.Default],[r.MeshLambertMaterial,o.Default,s.Default],[r.MeshDepthMaterial,o.Default,s.Default],[r.MeshNormalMaterial,o.Default,s.Default],[r.MultiMaterial,o.Default,s.Default],[r.PointsMaterial,o.Default,s.Default],[r.SpriteMaterial,o.Default,s.Default],[r.LineBasicMaterial,o.Default,s.Default],[r.Material,o.Default,s.Default],[r.PerspectiveCamera,o.Default,s.Camera],[r.OrthographicCamera,o.Default,s.Camera],[r.CubeCamera,o.Unconstructed,s.CubeCamera],[r.CompressedTexture,o.Default,s.Texture],[r.CubeTexture,o.Default,s.Texture],[r.Texture,o.Default,s.Texture],[r.MD2Character,o.Default,s.MD2Character]],c={Object3D:["name","up","position","quaternion","scale","rotationAutoUpdate","matrix","matrixWorld","matrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","children"],KeyframeTrack:["name","keys","lastIndex","result"],Material:["side","opacity","blending","blendSrc","blendDst","blendEquation","depthFunc","polygonOffsetFactor","polygonOffsetUnits","alphaTest","overdraw","name","transparent","depthTest","depthWrite","colorWrite","polygonOffset","visible"],Texture:["mipmaps","flipY","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","format","type","offset","repeat","unpackAlignment","name"]},l=[["x","y"],["x","y","z"],["x","y","z","w"],["a","b","c","materialIndex","normal","color","vertexNormals","vertexColors"],["r","g","b"],["_x","_y","_z","_w"],["_x","_y","_z","_order"],["min","max"],["min","max"],["center","radius"],["elements"],["elements"],["array","itemSize","dynamic","updateRange"],[],[],[],["name","duration","tracks","results"],c.KeyframeTrack,c.KeyframeTrack,c.KeyframeTrack,c.KeyframeTrack,c.KeyframeTrack,["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["parameters"],["attributes","index"],["vertices","faces","faceVertexUvs","morphTargets","morphNormals","morphColors","animations","boundingSphere"],c.Object3D.concat(["geometry","material","materialTexture","materialWireframe"]),c.Object3D.concat(["color"]),c.Object3D.concat(["color","intensity"]),c.Object3D.concat(["color","groundColor","intensity"]),c.Object3D.concat(["color","intensity","distance","decay"]),c.Object3D.concat(["color","intensity","distance","decay","angle","exponent"]),c.Object3D.concat(["fog","overrideMaterial"]),c.Object3D,["color","near","far"],["color","density"],c.Material.concat(["color","map","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","fog","shading","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","vertexColors","skinning","morphTargets"]),c.Material.concat(["color","emissive","specular","shininess","metal","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","fog","shading","wireframe","wireframeLinewidth","vertexColors","skinning","morphTargets","morphNormals"]),c.Material.concat(["color","emissive","map","specularMap","alphaMap","envMap","combine","reflectivity","fog","wireframe","wireframeLinewidth","vertexColors","skinning","morphTargets","morphNormals"]),["opacity","blending","depthTest","depthWrite","wireframe","wireframeLinewidth"],["opacity","blending","depthTest","depthWrite","wireframe","wireframeLinewidth"],["materials","visible"],["color","opacity","map","side","sizeAttenuation","blending","depthTest","depthWrite","vertexColors","fog"],["color","opacity","map","blending","depthTest","depthWrite","uvOffset","uvScale","fog"],["color","opacity","blending","depthTest","depthWrite","linewidth","linecap","linejoin","vertexColors","fog"],c.Material,["fov","aspect","near","far"],["left","right","top","bottom","near","far"],["near","far","cubeResolution"],c.Texture.concat(["image"]),c.Texture.concat(["images"]),c.Texture.concat(["image"]),["scale","animationFPS","root","meshBody","skinsBody","meshWeapon","skinsWeapon","weapons","activeAnimation"]];e.exports={ID:i<<2|n,ENTITIES:m,PROPERTIES:l}},function(e,t){e.exports=THREE},function(e,t,a){var r=a(1);r.MD2Character=function(){function e(e,t){for(var i=r.UVMapping,n=[],o=0;o<t.length;o++)n[o]=r.ImageUtils.loadTexture(e+t[o],i,a),n[o].name=t[o];return n}function t(e,t){var a=new r.MeshLambertMaterial({color:16755200,wireframe:!0,morphTargets:!0,morphNormals:!0}),i=new r.MeshLambertMaterial({color:16777215,wireframe:!1,map:t,morphTargets:!0,morphNormals:!0}),n=new r.Mesh(e,i);return n.rotation.y=-Math.PI/2,n.castShadow=!0,n.receiveShadow=!0,n.materialTexture=i,n.materialWireframe=a,n}function a(){i.loadCounter-=1,0===i.loadCounter&&i.onLoadComplete()}var i=this;this.scale=1,this.animationFPS=6,this.root=new r.Object3D,this.meshBody=null,this.meshWeapon=null,this.skinsBody=[],this.skinsWeapon=[],this.weapons=[],this.activeAnimation=null,this.mixer=null,this.onLoadComplete=function(){},this.loadCounter=0,this.loadParts=function(n){this.loadCounter=2*n.weapons.length+n.skins.length+1;for(var o=[],s=0;s<n.weapons.length;s++)o[s]=n.weapons[s][1];this.skinsBody=e(n.baseUrl+"skins/",n.skins),this.skinsWeapon=e(n.baseUrl+"skins/",o);var m=new r.MD2Loader;m.load(n.baseUrl+n.body,function(e){e.computeBoundingBox(),i.root.position.y=-i.scale*e.boundingBox.min.y;var n=t(e,i.skinsBody[0]);n.scale.set(i.scale,i.scale,i.scale),i.root.add(n),i.meshBody=n,i.meshBody.clipOffset=0,i.activeAnimationClipName=n.geometry.animations[0].name,i.mixer=new r.AnimationMixer(n),a()});for(var c=function(e,r){return function(n){var o=t(n,i.skinsWeapon[e]);o.scale.set(i.scale,i.scale,i.scale),o.visible=!1,o.name=r,i.root.add(o),i.weapons[e]=o,i.meshWeapon=o,a()}},s=0;s<n.weapons.length;s++)m.load(n.baseUrl+n.weapons[s][0],c(s,n.weapons[s][0]))},this.setPlaybackRate=function(e){0!==e?this.mixer.timeScale=1/e:this.mixer.timeScale=0},this.setWireframe=function(e){e?(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialWireframe)):(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialTexture))},this.setSkin=function(e){this.meshBody&&this.meshBody.material.wireframe===!1&&(this.meshBody.material.map=this.skinsBody[e])},this.setWeapon=function(e){for(var t=0;t<this.weapons.length;t++)this.weapons[t].visible=!1;var a=this.weapons[e];a&&(a.visible=!0,this.meshWeapon=a,i.syncWeaponAnimation())},this.setAnimation=function(e){if(this.meshBody){this.meshBody.activeAction&&(i.mixer.removeAction(this.meshBody.activeAction),this.meshBody.activeAction=null);var t=r.AnimationClip.findByName(this.meshBody.geometry.animations,e);if(t){var a=new r.AnimationAction(t,this.mixer.time).setLocalRoot(this.meshBody);i.mixer.addAction(a),this.meshBody.activeAction=a}}i.activeClipName=e,i.syncWeaponAnimation()},this.syncWeaponAnimation=function(){var e=i.activeClipName;if(i.meshWeapon){this.meshWeapon.activeAction&&(i.mixer.removeAction(this.meshWeapon.activeAction),this.meshWeapon.activeAction=null);var t=r.AnimationClip.findByName(this.meshWeapon.geometry.animations,e);if(t){var a=new r.AnimationAction(t).syncWith(this.meshBody.activeAction).setLocalRoot(this.meshWeapon);i.mixer.addAction(a),this.meshWeapon.activeAction=a}}},this.update=function(e){this.mixer&&this.mixer.update(e)}},e.exports=r.MD2Character}]);